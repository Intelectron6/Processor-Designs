Illustrating all shift/rotate instructions, move to accumulator, store instruction:

Pseudo-code:-
1) mva mem(10)
2) ror mem(11)
3) rol mem(11)
4) rsh mem(12)
5) lsh mem(12)
6) str mem(15)
7) mva mem(13)
8) rsa mem(14)
9) str mem(16)
10) 6
11) 2
12) 4
13) -5
14) 3

VHDL Test bench commands:-
do_program (clk, write_en, addr, data, "00000001" , INSTR_mva & "00001010");
do_program (clk, write_en, addr, data, "00000010" , INSTR_ror & "00001011");
do_program (clk, write_en, addr, data, "00000011" , INSTR_rol & "00001011");
do_program (clk, write_en, addr, data, "00000100" , INSTR_rsh & "00001100");
do_program (clk, write_en, addr, data, "00000101" , INSTR_lsh & "00001100");
do_program (clk, write_en, addr, data, "00000110" , INSTR_str & "00001111");
do_program (clk, write_en, addr, data, "00000111" , INSTR_mov & "00001101");
do_program (clk, write_en, addr, data, "00001000" , INSTR_rsa & "00001110");
do_program (clk, write_en, addr, data, "00001001" , INSTR_str & "00010000");
do_program (clk, write_en, addr, data, "00001010" , X"0006");
do_program (clk, write_en, addr, data, "00001011" , X"0002");
do_program (clk, write_en, addr, data, "00001100" , X"0004");
do_program (clk, write_en, addr, data, "00001101" , X"FFFB");
do_program (clk, write_en, addr, data, "00001110" , X"0003");